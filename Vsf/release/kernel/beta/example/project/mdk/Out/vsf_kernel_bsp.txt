; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\out\vsf_kernel_bsp.o --asm_dir=.\Out\ --list_dir=.\Out\ --depend=.\out\vsf_kernel_bsp.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,64,1,381,177 -I..\..\..\vsf -I..\..\usrapp\template -I..\..\..\vsf\utilities\compiler\arm\CMSIS\Core\Include -I.\RTE\Device\CMSDK_CM3 -I.\RTE\_tempalte_armv7-m_ac5 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\V2M-MPS2_CMx_BSP\1.7.0\Boards\ARM\V2M-MPS2\Common -IC:\Keil_v5\ARM\PACK\Keil\V2M-MPS2_CMx_BSP\1.7.0\Device\CMSDK_CM3\Include -D__MICROLIB -D__UVISION_VERSION=527 -D_RTE_ -DCMSDK_CM3 --enum_is_int --wchar32 --omf_browse=.\out\vsf_kernel_bsp.crf ..\..\..\vsf\kernel\vsf_kernel_bsp.c]
                          THUMB

                          AREA ||.ARM.Collect$$$$000000FF||, CODE, READONLY, ALIGN=1

                  _main_init PROC
;;;135    void _main_init (void);
;;;136    void _main_init (void) 
000000  f7fffffe          BL       __vsf_main_entry
                  |L1.4|
;;;137    {
;;;138        __vsf_main_entry();
;;;139        while(1);
000004  e7fe              B        |L1.4|
;;;140    }
;;;141    #   else
                          ENDP


                          AREA ||i.__post_vsf_kernel_init||, CODE, READONLY, ALIGN=2

                  __post_vsf_kernel_init PROC
                  ||__tagsym$$used||
;;;92     
;;;93     ROOT void __post_vsf_kernel_init(void)
000000  4807              LDR      r0,|L2.32|
;;;94     {
;;;95     #if     VSF_OS_RUN_MAIN_AS_THREAD == ENABLED                                    \
;;;96         &&  VSF_USE_KERNEL_THREAD_MODE == ENABLED
;;;97         ALIGN(8) NO_INIT static uint64_t __main_stack[(VSF_OS_MAIN_STACK_SIZE + 7)/8];
;;;98         NO_INIT static vsf_thread_t __main_thread;
;;;99         //!< Align with 8bytes
;;;100        uint_fast32_t stack_size = sizeof(__main_stack) & ~0x07;
;;;101        ASSERT(stack_size >= 64);
;;;102        
;;;103        __main_thread.pentry = (vsf_thread_entry_t *)main;
000002  4a06              LDR      r2,|L2.28|
000004  f44f6180          MOV      r1,#0x400             ;100
;;;104        __main_thread.pstack = __main_stack;
000008  6382              STR      r2,[r0,#0x38]  ; __main_thread
00000a  f5a06280          SUB      r2,r0,#0x400
;;;105        __main_thread.stack_size = stack_size;
00000e  6402              STR      r2,[r0,#0x40]  ; __main_thread
000010  8781              STRH     r1,[r0,#0x3c]
;;;106        vsf_thread_start((vsf_thread_t *)&__main_thread, vsf_priority_inherit);
000012  f04f31ff          MOV      r1,#0xffffffff
000016  f7ffbffe          B.W      vsf_thread_start
;;;107    #else
;;;108        main();
;;;109    #endif
;;;110    }
;;;111    
                          ENDP

00001a  0000              DCW      0x0000
                  |L2.28|
                          DCD      main
                  |L2.32|
                          DCD      ||area_number.8||+0x400

                          AREA ||i.vsf_arch_req___systimer_freq___from_usr||, CODE, READONLY, ALIGN=2

                  vsf_arch_req___systimer_freq___from_usr PROC
;;;113    /*============================ IMPLEMENTATION ================================*/
;;;114    uint32_t vsf_arch_req___systimer_freq___from_usr(void)
000000  4800              LDR      r0,|L3.4|
;;;115    {
;;;116        return SYSTEM_FREQ;
;;;117    }
000002  4770              BX       lr
;;;118    
                          ENDP

                  |L3.4|
                          DCD      0x017d7840

                          AREA ||i.vsf_kernel_get_resource_on_init||, CODE, READONLY, ALIGN=2

                  vsf_kernel_get_resource_on_init PROC
                  |symbol_number.49|
;;;46     ROOT
;;;47     const vsf_kernel_resource_t * vsf_kernel_get_resource_on_init(void)
000000  4800              LDR      r0,|L4.4|
;;;48     {
;;;49     
;;;50     #if VSF_CFG_EVTQ_EN == ENABLED
;;;51         static const vsf_arch_priority_t __vsf_os_priority[VSF_OS_EVTQ_NUM] = {
;;;52             MREPEAT(VSF_OS_EVTQ_SWI_NUM, __VSF_OS_EVTQ_SWI_PRIO_INIT, NULL)
;;;53         };
;;;54         
;;;55     #   if defined(VSF_CFG_EVTQ_LIST)
;;;56         static NO_INIT vsf_pool_block(vsf_evt_node_pool)    
;;;57             __evt_node_buffer[VSF_OS_EVTQ_POOL_SIZE];    
;;;58     #   endif
;;;59     #endif
;;;60     
;;;61     #if VSF_USE_KERNEL_TASK_MODE == ENABLED
;;;62         static NO_INIT vsf_pool_block(vsf_task_stack_frame_pool) 
;;;63             __vsf_task_frame_buffer[VSF_TASK_DEFAULT_FRAME_POOL_SIZE];
;;;64     #endif
;;;65     
;;;66         static const vsf_kernel_resource_t res = {
;;;67     #if VSF_CFG_EVTQ_EN == ENABLED
;;;68             .arch = {
;;;69                 .os_priorities_ptr = __vsf_os_priority,
;;;70                 .priority_cnt = UBOUND(__vsf_os_priority),
;;;71             },
;;;72     #   if defined(VSF_CFG_EVTQ_LIST)
;;;73             .evt_queue = {
;;;74                 .nodes_buf_ptr = __evt_node_buffer,
;;;75                 .node_cnt = UBOUND(__evt_node_buffer),
;;;76             },
;;;77     #   endif
;;;78     #endif
;;;79     
;;;80     #if VSF_USE_KERNEL_TASK_MODE == ENABLED
;;;81             .task_stack = {
;;;82                 .frame_buf_ptr = __vsf_task_frame_buffer,
;;;83                 .frame_cnt = UBOUND(__vsf_task_frame_buffer),
;;;84             },
;;;85     #endif
;;;86     
;;;87         };
;;;88         
;;;89         return &res;
;;;90     }
000002  4770              BX       lr
;;;91     
                          ENDP

                  |L4.4|
                          DCD      ||area_number.11||

                          AREA ||.bss.noinit||, DATA, NOINIT, ALIGN=2

                  __evt_node_buffer
                          %        128

                          AREA ||area_number.7||, DATA, NOINIT, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.bss.noinit||
                  __vsf_task_frame_buffer
                          %        192

                          AREA ||area_number.8||, DATA, NOINIT, ALIGN=3

                          EXPORTAS ||area_number.8||, ||.bss.noinit||
                  __main_stack
                          %        1024
                  __main_thread
                          %        80

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  __vsf_os_priority
                          DCD      0x000000ff

                          AREA ||area_number.11||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.constdata||
                  ||res||
                          DCD      __vsf_os_priority
000004  0001              DCW      0x0001
000006  0000              DCB      0x00,0x00
                          DCD      __evt_node_buffer
00000c  0010              DCW      0x0010
00000e  0000              DCB      0x00,0x00
                          DCD      __vsf_task_frame_buffer
000014  0010              DCW      0x0010
000016  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\vsf\\kernel\\vsf_kernel_bsp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_vsf_kernel_bsp_c_99f7c5d3____REV16|
#line 468 "..\\..\\..\\vsf\\utilities\\compiler\\arm\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___16_vsf_kernel_bsp_c_99f7c5d3____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_vsf_kernel_bsp_c_99f7c5d3____REVSH|
#line 483
|__asm___16_vsf_kernel_bsp_c_99f7c5d3____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___16_vsf_kernel_bsp_c_99f7c5d3____RRX|
#line 670
|__asm___16_vsf_kernel_bsp_c_99f7c5d3____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
